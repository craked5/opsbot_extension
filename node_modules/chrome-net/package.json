{
  "name": "chrome-net",
  "description": "Use the Node `net` API in Chrome Apps",
  "version": "3.1.1",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "bugs": {
    "url": "https://github.com/feross/chrome-net/issues"
  },
  "contributors": [
    {
      "name": "John Hiesey",
      "email": "john@hiesey.com"
    },
    {
      "name": "Jan Schär",
      "email": "jscissr@gmail.com"
    }
  ],
  "dependencies": {
    "inherits": "^2.0.1"
  },
  "devDependencies": {
    "browserify": "^13.0.0",
    "chrome-dgram": "^2.0.6",
    "envify": "^3.2.0",
    "once": "1.x",
    "portfinder": "0.x",
    "run-auto": "^1.1.3",
    "standard": "^5.0.2",
    "tape": "^4.0.0",
    "through": "2.x"
  },
  "homepage": "https://github.com/feross/chrome-net",
  "keywords": [
    "chrome app",
    "chrome.socket",
    "socket api",
    "net",
    "tcp",
    "wrapper",
    "client",
    "server"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/chrome-net.git"
  },
  "scripts": {
    "test": "standard && tape test/*.js"
  },
  "readme": "# chrome-net [![npm](https://img.shields.io/npm/v/chrome-net.svg)](https://npmjs.org/package/chrome-net) [![downloads](https://img.shields.io/npm/dm/chrome-net.svg)](https://npmjs.org/package/chrome-net)\n\n### Use the Node `net` API in Chrome Apps\n\nThis module lets you use the Node.js [net](https://nodejs.org/api/net.html) (TCP) API in [Chrome Packaged Apps](https://developer.chrome.com/apps/about_apps).\n\nInstead of learning the quirks of Chrome's `chrome.sockets` API for networking in Chrome Apps just **use the higher-level node API you're familiar with**. Then, compile your code with [browserify](https://github.com/substack/node-browserify) and you're all set!\n\n## install\n\n```\nnpm install chrome-net\n```\n\n## methods\n\nUse node's `net` API, including all parameter list shorthands and variations.\n\nExample TCP client:\n\n```js\nvar net = require('chrome-net')\n\nvar client = net.createConnection({\n  port: 1337,\n  host: '127.0.0.1'\n})\n\nclient.write('beep')\n\nclient.on('data', function (data) {\n  console.log(data)\n})\n\n// .pipe() streaming API works too!\n\n```\n\nExample TCP server:\n\n```js\nvar net = require('chrome-net')\n\nvar server = net.createServer()\n\nserver.on('listening', function () {\n  console.log('listening')\n})\n\nserver.on('connection', function (sock) {\n  console.log('Connection from ' + sock.remoteAddress + ':' + sock.remotePort)\n  sock.on('data', function (data) {\n    console.log(data)\n  })\n})\n\nserver.listen(1337)\n\n```\n\nSee nodejs.org for full API documentation: [net](https://nodejs.org/api/net.html)\n\n## contribute\n\nTo run tests, use `npm test`. The tests will run TCP and UDP servers and launch a few different Chrome Packaged Apps with browserified client code. The tests currently require Chrome on Windows or Chrome Canary on Mac. If you're on Linux, feel free to send a pull request to fix this limitation.\n\n## license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org), John Hiesey & Jan Schär.\n",
  "readmeFilename": "README.md",
  "_id": "chrome-net@3.1.1",
  "dist": {
    "shasum": "740a96eb9e31dcd501d72a073dd1e85fa9437aae"
  },
  "_from": "chrome-net@",
  "_resolved": "https://registry.npmjs.org/chrome-net/-/chrome-net-3.1.1.tgz"
}
